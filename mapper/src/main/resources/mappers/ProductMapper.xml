<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lne.fmmall.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.lne.fmmall.entity.Product">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId" />
    <result column="sold_num" jdbcType="INTEGER" property="soldNum" />
    <result column="product_status" jdbcType="TINYINT" property="productStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <resultMap id="ProductVoMap" type="com.lne.fmmall.entity.ProductVo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId" />
    <result column="sold_num" jdbcType="INTEGER" property="soldNum" />
    <result column="product_status" jdbcType="TINYINT" property="productStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <collection property="imgs" column="product_id" select="com.lne.fmmall.dao.ProductImgMapper.selectImgByProduct"></collection>
  </resultMap>

  <resultMap id="productVo2Map" type="com.lne.fmmall.entity.ProductVo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="root_category_id" jdbcType="INTEGER" property="rootCategoryId" />
    <result column="sold_num" jdbcType="INTEGER" property="soldNum" />
    <result column="product_status" jdbcType="TINYINT" property="productStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <collection property="skus" column="product_id" select="com.lne.fmmall.dao.ProductSkuMapper.selectByProductIds"/>
  </resultMap>


  <select id="selectRecommendProduct" resultMap="ProductVoMap">
    select
      product_id,
      product_name,
      category_id,
      root_category_id,
      sold_num,
      product_status,
      content,
      create_time,
      update_time
    from product order by create_time desc limit 0,3;
  </select>

<!--  根据三级分类id分页查询商品-->
  <select id="selectProductByCategoryId" resultMap="productVo2Map">
    select
      product_id,
      product_name,
      category_id,
      root_category_id,
      sold_num,
      product_status,
      content,
      create_time,
      update_time
    from product where category_id = #{categoryId} and product_status=1 limit #{start},#{limit}
  </select>

<!--  查询某个类别下所有商品的品牌-->
  <select id="selectBrandsByCategoryId" resultSets="java.util.List" resultType="String">
    select DISTINCT(brand) from product_params where product_id in (select product_id from product where category_id=#{categoryId} and product_status =1);
  </select>

<!--  根据关键字查询，分页-->
  <select id="selectProductsByKeyword" resultMap="productVo2Map">
    select
      product_id,
      product_name,
      category_id,
      root_category_id,
      sold_num,
      product_status,
      content,
      create_time,
      update_time
    from product where product_name like #{kw} and product_status=1 limit #{start},#{limit}
  </select>

</mapper>